name: RL RPi Image Generation

on:
  workflow_dispatch

jobs:
  build_rpi_tarball:
    runs-on: buildjet-4vcpu-ubuntu-2204-arm
    steps:
    - uses: actions/checkout@v3.5.0
      with:
        ref: 'rpi'

    - name: Install needed packages
      run: |
        sudo rm -rf /etc/apt/sources.list.d/microsoft-prod.list
        sudo rm -rf /var/lib/apt/lists/*
        sudo sed -i 's/jammy/.\/devel/g' /etc/apt/sources.list
        sudo apt-get update && sudo apt-get install debootstrap -y
        sudo ln -sfn /usr/share/debootstrap/scripts/gutsy /usr/share/debootstrap/scripts/lunar
        sudo dpkg -i debs/live-build_*_all.deb
        sudo mv /usr/share/debootstrap/functions functions
        sudo patch -i 0002-remove-WRONGSUITE-error.patch
        sudo mv functions /usr/share/debootstrap/functions
        sudo cp binary_grub-efi /usr/lib/live/build/binary_grub-efi
        
    - name: Make scripts executable
      run: chmod -R +x build.sh etc/auto/config etc/terraform.conf etc/

    - name: Build tarball
      run: sudo ./build.sh etc/terraform.conf
      
    - uses: actions/cache@v3.3.1
      with:
        path: binary/
        key: tar-rpi-${{ github.run_id }}

  deploy_rpi_desktop:
    needs: build_rpi_tarball
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:     
    - uses: actions/checkout@v3.5.0
      with:
        ref: 'rpi'
    
    - uses: actions/cache@v3.3.1
      with:
        path: binary/
        key: tar-rpi-${{ github.run_id }}
        
    - name: Deploy to partition
      run: source ./etc/terraform.conf && VER="${VERSION}${SUBVER}" && sudo ./debos-docker -t image:"Rhino-Linux-${VER}-rpi-desktop.img" -m 10G raspberrypi-desktop.yaml
      
    - name: Place output folder
      run: sudo mkdir -p builds/rpi-desktop
      
    - name: Move to output folder and compress
      run: |
        sudo mv Rhino*rpi-desktop.img builds/rpi-desktop/
        sudo xz -v builds/rpi-desktop/Rhino*rpi-desktop.img
        echo "IMGRPD=$(cd builds/rpi-desktop; ls *.img.xz)" >> $GITHUB_ENV

    - uses: actions/upload-artifact@v3.1.2
      with:
        name: ${{ env.IMGRPD }}
        path: builds/rpi-desktop/${{ env.IMGRPD }}

  deploy_rpi_server:
    needs: build_rpi_tarball
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:     
    - uses: actions/checkout@v3.5.0
      with:
        ref: 'rpi'
    
    - uses: actions/cache@v3.3.1
      with:
        path: binary/
        key: tar-rpi-${{ github.run_id }}
        
    - name: Deploy to partition
      run: source ./etc/terraform.conf && VER="${VERSION}${SUBVER}" && sudo ./debos-docker -t image:"Rhino-Linux-${VER}-rpi-server.img" -m 10G raspberrypi-server.yaml
      
    - name: Place output folder
      run: sudo mkdir -p builds/rpi-server
      
    - name: Move to output folder and compress
      run: |
        sudo mv Rhino*rpi-server.img builds/rpi-server/
        sudo xz -v builds/rpi-server/Rhino*rpi-server.img
        echo "IMGRPS=$(cd builds/rpi-server; ls *.img.xz)" >> $GITHUB_ENV

    - uses: actions/upload-artifact@v3.1.2
      with:
        name: ${{ env.IMGRPS }}
        path: builds/rpi-server/${{ env.IMGRPS }}









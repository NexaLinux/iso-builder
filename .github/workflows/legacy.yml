name: Rhino Linux Image Generation (Meta) [Legacy Workflow]

on:
  workflow_dispatch

jobs:
  build_amd64:
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install needed packages
      run: |
        sudo rm -rf /var/lib/apt/lists/*
        sudo sed -i 's/jammy/noble/g' /etc/apt/sources.list
        sudo apt-get update && sudo apt-get install --reinstall debootstrap mtools dosfstools qemu-user-static binfmt-support dpkg-dev -y
        sudo ln -sfn /usr/share/debootstrap/scripts/gutsy /usr/share/debootstrap/scripts/noble
        sudo dpkg -i debs/live-build_*_all.deb
        sudo mv /usr/share/debootstrap/functions functions
        sudo patch -i 0002-remove-WRONGSUITE-error.patch
        sudo mv functions /usr/share/debootstrap/functions
        sudo cp binary_grub-efi /usr/lib/live/build/binary_grub-efi

    - name: Make scripts executable
      run: chmod -R +x build.sh etc/auto/config etc/terraform.conf etc/

    - name: Build ISO
      run: |
        sudo ./build.sh etc/terraform.conf
        echo "ISOX64=$(cd builds/amd64; ls *.iso)"  >> $GITHUB_ENV

    - uses: actions/upload-artifact@v4.3.3
      with:
        name: ${{ env.ISOX64 }}
        path: builds/amd64/${{ env.ISOX64 }}
        
  build_arm64:
    runs-on: buildjet-4vcpu-ubuntu-2204-arm
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install needed packages
      run: |
        sudo rm -rf /var/lib/apt/lists/*
        sudo sed -i 's/jammy/noble/g' /etc/apt/sources.list
        sudo apt-get update && sudo apt-get install --reinstall debootstrap mtools dosfstools qemu-user-static binfmt-support dpkg-dev -y
        sudo ln -sfn /usr/share/debootstrap/scripts/gutsy /usr/share/debootstrap/scripts/noble
        sudo dpkg -i debs/live-build_*_all.deb
        sudo mv /usr/share/debootstrap/functions functions
        sudo patch -i 0002-remove-WRONGSUITE-error.patch
        sudo mv functions /usr/share/debootstrap/functions
        sudo cp binary_grub-efi /usr/lib/live/build/binary_grub-efi
        
    - name: Make scripts executable
      run: chmod -R +x build.sh etc/auto/config etc/terraform.conf etc/

    - name: Build ISO
      run: |
        sudo ./build.sh etc/terraform.conf
        echo "ISOA64=$(cd builds/arm64; ls *.iso)" >> $GITHUB_ENV

    - uses: actions/upload-artifact@v4.3.3
      with:
        name: ${{ env.ISOA64 }}
        path: builds/arm64/${{ env.ISOA64 }}

  build_pine_tarball:
    runs-on: buildjet-4vcpu-ubuntu-2204-arm
    steps:
    - uses: actions/checkout@v4
      with:
        ref: 'pinephone'

    - name: Install needed packages
      run: |
        sudo rm -rf /etc/apt/sources.list.d/microsoft-prod.list
        sudo rm -rf /var/lib/apt/lists/*
        sudo sed -i 's/jammy/noble/g' /etc/apt/sources.list
        sudo apt-get update && sudo apt-get install debootstrap mtools dosfstools qemu-user-static binfmt-support dpkg-dev -y
        sudo ln -sfn /usr/share/debootstrap/scripts/gutsy /usr/share/debootstrap/scripts/noble
        sudo dpkg -i debs/live-build_*_all.deb
        sudo mv /usr/share/debootstrap/functions functions
        sudo patch -i 0002-remove-WRONGSUITE-error.patch
        sudo mv functions /usr/share/debootstrap/functions
        sudo cp binary_grub-efi /usr/lib/live/build/binary_grub-efi
        sudo cp binary_rootfs /usr/lib/live/build/binary_rootfs
        
    - name: Make scripts executable
      run: chmod -R +x build.sh etc/auto/config etc/terraform.conf etc/

    - name: Build tarball
      run: sudo ./build.sh etc/terraform.conf
      
    - uses: actions/cache@v4.0.2
      with:
        path: binary/
        key: tar-pine-${{ github.run_id }}

  deploy_pine:
    needs: build_pine_tarball
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
    - uses: actions/checkout@v4
      with:
        ref: 'pinephone'
    
    - uses: actions/cache@v4.0.2
      with:
        path: binary/
        key: tar-pine-${{ github.run_id }}
        
    - name: Deploy to partition
      run: source ./etc/terraform.conf && VER="${VERSION}${SUBVER}" && sudo ./debos-docker -t image:"Rhino-Linux-${VER}-pinephone-unified.img" -m 10G pinephone-unified.yaml
      
    - name: Place output folder
      run: sudo mkdir -p builds/pine
      
    - name: Move to output folder and compress
      run: |
        sudo mv Rhino*unified.img builds/pine/
        sudo xz -v builds/pine/Rhino*unified.img
        echo "IMGPP=$(cd builds/pine; ls *.img.xz)" >> $GITHUB_ENV

    - uses: actions/upload-artifact@v4.3.3
      with:
        name: ${{ env.IMGPP }}
        path: builds/pine/${{ env.IMGPP }}

  build_rpi_tarball:
    runs-on: buildjet-4vcpu-ubuntu-2204-arm
    steps:
    - uses: actions/checkout@v4
      with:
        ref: 'rpi'

    - name: Install needed packages
      run: |
        sudo rm -rf /etc/apt/sources.list.d/microsoft-prod.list
        sudo rm -rf /var/lib/apt/lists/*
        sudo sed -i 's/jammy/noble/g' /etc/apt/sources.list
        sudo apt-get update && sudo apt-get install debootstrap  mtools dosfstools qemu-user-static binfmt-support dpkg-dev -y
        sudo ln -sfn /usr/share/debootstrap/scripts/gutsy /usr/share/debootstrap/scripts/noble
        sudo dpkg -i debs/live-build_*_all.deb
        sudo mv /usr/share/debootstrap/functions functions
        sudo patch -i 0002-remove-WRONGSUITE-error.patch
        sudo mv functions /usr/share/debootstrap/functions
        sudo cp binary_grub-efi /usr/lib/live/build/binary_grub-efi
        
    - name: Make scripts executable
      run: chmod -R +x build.sh etc/auto/config etc/terraform.conf etc/

    - name: Build tarball
      run: sudo ./build.sh etc/terraform.conf
      
    - uses: actions/cache@v4.0.2
      with:
        path: binary/
        key: tar-rpi-${{ github.run_id }}

  deploy_rpi_desktop:
    needs: build_rpi_tarball
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:     
    - uses: actions/checkout@v4
      with:
        ref: 'rpi'
    
    - uses: actions/cache@v4.0.2
      with:
        path: binary/
        key: tar-rpi-${{ github.run_id }}
        
    - name: Deploy to partition
      run: source ./etc/terraform.conf && VER="${VERSION}${SUBVER}" && sudo ./debos-docker -t image:"Rhino-Linux-${VER}-rpi-desktop.img" -m 10G raspberrypi-desktop.yaml
      
    - name: Place output folder
      run: sudo mkdir -p builds/rpi-desktop
      
    - name: Move to output folder and compress
      run: |
        sudo mv Rhino*rpi-desktop.img builds/rpi-desktop/
        sudo xz -v builds/rpi-desktop/Rhino*rpi-desktop.img
        echo "IMGRPD=$(cd builds/rpi-desktop; ls *.img.xz)" >> $GITHUB_ENV

    - uses: actions/upload-artifact@v4.3.3
      with:
        name: ${{ env.IMGRPD }}
        path: builds/rpi-desktop/${{ env.IMGRPD }}

  deploy_rpi_server:
    needs: build_rpi_tarball
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:     
    - uses: actions/checkout@v4
      with:
        ref: 'rpi'
    
    - uses: actions/cache@v4.0.2
      with:
        path: binary/
        key: tar-rpi-${{ github.run_id }}
        
    - name: Deploy to partition
      run: source ./etc/terraform.conf && VER="${VERSION}${SUBVER}" && sudo ./debos-docker -t image:"Rhino-Linux-${VER}-rpi-server.img" -m 10G raspberrypi-server.yaml
      
    - name: Place output folder
      run: sudo mkdir -p builds/rpi-server
      
    - name: Move to output folder and compress
      run: |
        sudo mv Rhino*rpi-server.img builds/rpi-server/
        sudo xz -v builds/rpi-server/Rhino*rpi-server.img
        echo "IMGRPS=$(cd builds/rpi-server; ls *.img.xz)" >> $GITHUB_ENV

    - uses: actions/upload-artifact@v4.3.3
      with:
        name: ${{ env.IMGRPS }}
        path: builds/rpi-server/${{ env.IMGRPS }}

  build_tab_tarball:
    runs-on: buildjet-4vcpu-ubuntu-2204-arm
    steps:
    - uses: actions/checkout@v4
      with:
        ref: 'pinetab'

    - name: Install needed packages
      run: |
        sudo rm -rf /etc/apt/sources.list.d/microsoft-prod.list
        sudo rm -rf /var/lib/apt/lists/*
        sudo sed -i 's/jammy/noble/g' /etc/apt/sources.list
        sudo apt-get update && sudo apt-get install debootstrap mtools dosfstools qemu-user-static binfmt-support dpkg-dev -y
        sudo ln -sfn /usr/share/debootstrap/scripts/gutsy /usr/share/debootstrap/scripts/noble
        sudo dpkg -i debs/live-build_*_all.deb
        sudo mv /usr/share/debootstrap/functions functions
        sudo patch -i 0002-remove-WRONGSUITE-error.patch
        sudo mv functions /usr/share/debootstrap/functions
        sudo cp binary_grub-efi /usr/lib/live/build/binary_grub-efi
        sudo cp binary_rootfs /usr/lib/live/build/binary_rootfs
        
    - name: Make scripts executable
      run: chmod -R +x build.sh etc/auto/config etc/terraform.conf etc/

    - name: Build tarball
      run: sudo ./build.sh etc/terraform.conf
      
    - uses: actions/cache@v4.0.2
      with:
        path: binary/
        key: tar-tab-${{ github.run_id }}

  deploy_tab1:
    needs: build_tab_tarball
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
    - uses: actions/checkout@v4
      with:
        ref: 'pinetab'
    
    - uses: actions/cache@v4.0.2
      with:
        path: binary/
        key: tar-tab-${{ github.run_id }}
        
    - name: Deploy to partition
      run: source ./etc/terraform.conf && VER="${VERSION}${SUBVER}" && sudo ./debos-docker -t image:"Rhino-Linux-${VER}-pinetab.img" -m 10G pinetab.yaml
      
    - name: Place output folder
      run: sudo mkdir -p builds/tab
      
    - name: Move to output folder and compress
      run: |
        sudo mv Rhino*tab.img builds/tab/
        sudo xz -v builds/tab/Rhino*tab.img
        echo "IMGPTA=$(cd builds/tab; ls *.img.xz)" >> $GITHUB_ENV

    - uses: actions/upload-artifact@v4.3.3
      with:
        name: ${{ env.IMGPTA }}
        path: builds/tab/${{ env.IMGPTA }}
        
  deploy_tab2:
    needs: build_tab_tarball
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
    - uses: actions/checkout@v4
      with:
        ref: 'pinetab'
    
    - uses: actions/cache@v4.0.2
      with:
        path: binary/
        key: tar-tab-${{ github.run_id }}
        
    - name: Deploy to partition
      run: source ./etc/terraform.conf && VER="${VERSION}${SUBVER}" && sudo ./debos-docker -t image:"Rhino-Linux-${VER}-pinetab2.img" -m 10G pinetab2.yaml
      
    - name: Place output folder
      run: sudo mkdir -p builds/tab2
      
    - name: Move to output folder and compress
      run: |
        sudo mv Rhino*tab2.img builds/tab2/
        sudo xz -v builds/tab2/Rhino*tab2.img
        echo "IMGPTB=$(cd builds/tab2; ls *.img.xz)" >> $GITHUB_ENV

    - uses: actions/upload-artifact@v4.3.3
      with:
        name: ${{ env.IMGPTB }}
        path: builds/tab2/${{ env.IMGPTB }}
